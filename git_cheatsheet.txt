//check if git is installed
git version

//configure user's name and email in global config
git config --global user.name "Jyoti Rathi" 
git config --global user.email "jyotirathi79@gmail.com"

//clone a repo
git clone https://github.com/jyotirathi79/snippets.git

//status
git status
=> tells which branch i am on
=> tells that branch on github is up to date with the same branch on remote repository
=> tells if working directory is clean or not
=> tells if there are any changes between 
   - working directory
   - staging area
   - local repo
   - remote repo
   
//add a new file
// a- create a new text file
echo "My new test file" >> start.txt
//see that this file is untracked
git status
//c - add the file to the staging area
git add start.txt
//d- what is there in staging area
git status
//e - commit file to local repo
git commit -m "Adding file"
//f - see that working directory is clean and a new file is in local repo
git status
//notice until this stage the file is not there in the remote repo even if you go and check it
//g - push to master, provide username and password when requested for it.
git push origin master

//on mac install textmate2 by going to the url https://macromates.com
//when it gets downloaded - click on it compressed file and decompress it
//when icon comes drag it into applications folder
//quit textmate2 and launch from terminal - this should open the app
mate 


//associate git with textmate2
git config --global core.editor "mate -w"

//see .gitconfig file in textmate2 or default editor for git
git config --global -e

//quit textmate2 - command+q

//config file for textmate2 is in user's home directory and is called .tm_properties

//navigate to home dir then
pwd
output - /Users/jyotirathi

//open textmate2 config file (.tm_properties) in textmate2
mate .tm_properties

//put below contents into .tm_properties file and save and exit.
#general settings
fontName	= "Menlo"
fontSize	= 24

//on windows - install git for windows and then install notepad++ and then integrate gitbash with notepad++
//on user's home directory
pwd
//output - /c/Users

notepad++ .bash_profile

//on the .bash_profile file add the below contents
alias npp='notepad++.exe -multiInst -nosession'

//save the file, exit and relaunch gitbash
npp

//configure settings

git config --global core.editor 'notepad++.exe -multiInst -nosession'
